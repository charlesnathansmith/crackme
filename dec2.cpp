#include <iostream>

void decrypt(char* data)
{
	size_t len = strlen(data);
	unsigned char shift = 0xff;

	for (size_t i = 0; i < len; i++)
	{
		data[i] ^= shift;
		shift--;	// Note it'll just keep rolling around if len > 256
	}
}

int main()
{
	char data[] = { 0x1b, 0x01, 0x02, 0x17, 0xe7, 0xda, 0x66, 0x1d, 0xeb, 0xe6, 0x6a, 0x11, 0xe3, 0xf2, 0x6e, 0x15, 0x3e, 0x10, 0x12, 0x07, 0xeb, 0xea, 0x49, 0x09, 0xe3, 0x36, 0xae, 0x06, 0xe3, 0x6a, 0x5c, 0x08, 0xdb, 0x6e, 0xf0, 0x39, 0xdb, 0x6a, 0x54, 0x3a, 0xc3, 0x06, 0x98, 0x36, 0xc3, 0xd2, 0xda, 0x35, 0xa5, 0xfe, 0x6d, 0x2f, 0xce, 0xfa, 0x82, 0x2d, 0xd7, 0xf6, 0xde, 0x21, 0xc3, 0xf2, 0x12, 0x25, 0xaf, 0x8e, 0x9e, 0x5e, 0xc8, 0x8a, 0x56, 0x5e, 0xb2, 0x96, 0xee, 0x51, 0xb0, 0xb2, 0xe3, 0x51, 0xae, 0xae, 0xad, 0xa6, 0xaa, 0x9a, 0x09, 0x4b, 0xef, 0xa6, 0xa5, 0x4e, 0xdb, 0x92, 0x01, 0x43, 0x99, 0xae, 0xd6, 0x79, 0x8b, 0xaa, 0x82, 0x7d, 0x96, 0xa6, 0x16, 0x76, 0x93, 0xa2, 0x42, 0x75, 0x9e, 0xbe, 0xae, 0x6e, 0xf8, 0xba, 0x66, 0x6e, 0x81, 0xa6, 0xde, 0x61, 0x80, 0x82, 0xd3, 0x61, 0x7e, 0x7e, 0x7d, 0x76, 0x7a, 0x4a, 0xd9, 0x9b, 0x4b, 0x76, 0x75, 0x9e, 0x11, 0x42, 0xd1, 0x93, 0x68, 0x5e, 0x26, 0x89, 0x7b, 0x5a, 0x72, 0x8d, 0x65, 0x56, 0xe6, 0x86, 0x63, 0x52, 0xb2, 0x85, 0x4d, 0x6e, 0x7e, 0xbe, 0x28, 0x6a, 0xb6, 0xbe, 0x50, 0x76, 0x0e, 0xb1, 0x50, 0x52, 0x03, 0xb1, 0x4e, 0x4e, 0x4d, 0x46, 0x4a, 0x7a, 0xe9, 0xab, 0x77, 0x46, 0x45, 0xae, 0x3c, 0x72, 0xe1, 0xa3, 0x37, 0x0e, 0x76, 0xd9, 0x2b, 0x0a, 0x22, 0xdd, 0x34, 0x06, 0xb6, 0xd6, 0x33, 0x02, 0xe2, 0xd5, 0x3c, 0x1e, 0x0e, 0xce, 0x58, 0x1a, 0xc6, 0xce, 0x2f, 0x06, 0x7e, 0xc1, 0x20, 0x22, 0x73, 0xc1, 0x1e, 0x1e, 0x1d, 0x16, 0x1a, 0x2a, 0xb9, 0xfb, 0x33, 0x16, 0x15, 0xfe, 0x6e, 0x22, 0xb1, 0xf3, 0x06, 0x3e, 0x46, 0xe9, 0x1b, 0x3a, 0x12, 0xed, 0x03, 0x36, 0x86, 0xe6, 0x03, 0x32, 0xd2, 0xe5, 0xeb, 0xce, 0xde, 0x1e, 0x88, 0xca, 0x16, 0x1e, 0xfe, 0xd6, 0xae, 0x11, 0xf0, 0xf2, 0xa3, 0x11, 0xee, 0xee, 0xed, 0xe6, 0xea, 0xda, 0x49, 0x0b, 0xff, 0xe6, 0xe5, 0x0e, 0x98, 0xd2, 0x41, 0x03, 0xd5, 0xee, 0x96, 0x39, 0xcb, 0xea, 0xc2, 0x3d, 0xd2, 0xe6, 0x56, 0x36, 0xd3, 0xe2, 0x02, 0x35, 0xda, 0xfe, 0xee, 0x2e, 0xb8, 0xfa, 0x26, 0x2e, 0xcd, 0xe6, 0x9e, 0x21, 0xc0, 0xc2, 0x93, 0x21, 0xbe, 0xbe, 0xbd, 0xb6, 0xba, 0x8a, 0x19, 0x5b, 0xbb, 0xb6, 0xb5, 0x5e, 0xc0, 0x82, 0x11, 0x53, 0xa4, 0x9e, 0xe6, 0x49, 0xbb, 0x9a, 0xb2, 0x4d, 0xa1, 0x96, 0x26, 0x46, 0xa3, 0x92, 0x72, 0x45, 0x89, 0xae, 0xbe, 0x7e, 0xe8, 0xaa, 0x76, 0x7e, 0x9c, 0xb6, 0xce, 0x71, 0x90, 0x92, 0xc3, 0x71, 0x8e, 0x8e, 0x8d, 0x86, 0x8a, 0xba, 0x29, 0x6b, 0x87, 0x86, 0x85, 0x6e, 0x83, 0xb2, 0x21, 0x63, 0x7c, 0x7e, 0xdd, 0x9d, 0x7b, 0xaa, 0xf2, 0x9a, 0x73, 0xc6, 0xe8, 0x90, 0x6d, 0x8d, 0x5e, 0x91, 0x6b, 0xde, 0x40, 0x89, 0x6b, 0xda, 0xe4, 0x8a, 0x73, 0xb6, 0x28, 0x86, 0x73, 0x62, 0x6a, 0x85, 0xb5, 0x6e, 0xfd, 0xbf, 0x53, 0x6a, 0x52, 0xbd, 0x5f, 0x46, 0x4e, 0xb1, 0x52, 0x72, 0xf1, 0xb1, 0xcd, 0x6f, 0xed, 0xad, 0x4a, 0x6a, 0xcb, 0xa8, 0xc5, 0x74, 0xe5, 0xa5, 0x41, 0x72, 0x02, 0xa0, 0xbc, 0x0e, 0x9d, 0xdd, 0x3a, 0x0a, 0x7a, 0xd8, 0xb4, 0x07, 0x95, 0xd5, 0x3b, 0x02, 0x3a, 0xd5, 0x27, 0x1e, 0x36, 0xc9, 0x28, 0x18, 0x89, 0xc9, 0x2f, 0x16, 0x2e, 0xc1, 0x23, 0x22, 0x81, 0xc1, 0x1c, 0x1e, 0xbd, 0xfd, 0x1b, 0xca, 0x92, 0xfa, 0x13, 0xa6, 0x88, 0xf0, 0x0d, 0xed, 0x3e, 0xf1, 0x0f, 0x46, 0x20, 0xe5, 0x0f, 0xba, 0x84, 0xea, 0x57, 0xd6, 0x48, 0xe6, 0x77, 0x33, 0x9e, 0xe5, 0xcb, 0x3e, 0xb6, 0x1e, 0xf8, 0x1a, 0x59, 0x19, 0xf8, 0xf6, 0x4b, 0x1c, 0xfc, 0xf2, 0x5d, 0x18, 0xe0, 0xee, 0x73, 0x04, 0xe4, 0xea, 0x65, 0x00, 0xbf, 0xd7, 0x7a, 0x01, 0xb7, 0x22, 0xaa, 0x02, 0xdc, 0x3e, 0x7d, 0x3d, 0xd4, 0xda, 0x67, 0x30, 0xd8, 0xd6, 0x79, 0x3c, 0xdc, 0xd2, 0x4f, 0x38, 0xc0, 0xce, 0x41, 0x24, 0x8b, 0xeb, 0x56, 0x2d, 0x87, 0xf7, 0x5a, 0x21, 0xc0, 0xf2, 0x83, 0x20, 0xa8, 0x80, 0x3e, 0x5e, 0xab, 0x8a, 0xb2, 0x5d, 0xa7, 0x86, 0xae, 0x51, 0x93, 0x82, 0x32, 0x52, 0xac, 0xae, 0x0d, 0x4d, 0xaf, 0x55, 0x56, 0x43, 0xa7, 0x96, 0x05, 0x45, 0xb7, 0x92, 0xaa, 0x45, 0x8b, 0xae, 0x86, 0x79, 0x98, 0x7a, 0x39, 0x79, 0xa3, 0x56, 0xde, 0x76, 0x9c, 0x92, 0x2d, 0x78, 0x8f, 0x8e, 0x03, 0x69, 0x8f, 0x9a, 0x07, 0x6d, 0x8f, 0xa6, 0x0b, 0x61, 0x8f, 0xb2, 0x0f, 0x65, 0x70, 0x7e, 0xc1, 0x94, 0x6b, 0x7a, 0xf7, 0x9d, 0x63, 0x66, 0xfb, 0x91, 0x6b, 0x52, 0xff, 0x95, 0x73, 0x5e, 0xe3, 0x89, 0x7f, 0x5a, 0x72, 0x8d, 0x47, 0x56, 0xe6, 0x86, 0x83, 0x72, 0xfe, 0x85, 0x4f, 0x7e, 0x46, 0xb9, 0x58, 0x5a, 0xf9, 0xb9, 0xbb, 0xa8, 0xaa, 0xbf, 0x43, 0x42, 0x4a, 0xb5, 0x5b, 0x4e, 0x56, 0xa9, 0x7c, 0xb5, 0xb6, 0xa3, 0x57, 0x56, 0x5e, 0xa1, 0x87, 0x42, 0xde, 0xa5, 0xe2, 0xc0, 0xc2, 0xd7, 0x3b, 0x0a, 0x99, 0xdb, 0x3f, 0x06, 0x3e, 0xd1, 0x23, 0x02, 0x2a, 0xd5, 0x30, 0x1e, 0xae, 0xce, 0x23, 0x0a, 0x32, 0xcd, 0x24, 0x26, 0x77, 0xc5, 0x29, 0x22, 0x21, 0xea, 0x08, 0x30, 0x1b, 0xe5, 0x14, 0x20, 0x1b, 0xe5, 0x03, 0x30, 0x82, 0xe0, 0x00, 0x30, 0xd3, 0xe5, 0x03, 0x10, 0xa0, 0xe1, 0x90, 0x00, 0x9f, 0xe5, 0xcf, 0xfe, 0xff, 0xeb, 0x08, 0x30, 0x1b, 0xe5 };

	decrypt(data);

	for (size_t i = 0; i < sizeof(data); i++)
		printf("%.2X ", data[i] & 0xff);
}

